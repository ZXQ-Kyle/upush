<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.wsl.upush">


    <!-- 以下为需要的基本权限，需要自行添加至您的AndroidManifest文件中 start-->
    <!-- 以下为需要的基本权限，需要自行添加至您的AndroidManifest文件中 start-->
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.BROADCAST_PACKAGE_ADDED" />
    <uses-permission android:name="android.permission.BROADCAST_PACKAGE_CHANGED" />
    <uses-permission android:name="android.permission.BROADCAST_PACKAGE_INSTALL" />
    <uses-permission android:name="android.permission.BROADCAST_PACKAGE_REPLACED" />
    <uses-permission android:name="android.permission.GET_TASKS" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <!-- 以下为需要的基本权限，需要自行添加至您的AndroidManifest文件中 end-->


    <application
        android:usesCleartextTraffic="true"
        android:networkSecurityConfig="@xml/network_security_config">
        <!-- targetSDKVersion 28 开启http请求，避免net::ERR_CLEARTEXT_NOT_PERMITTED错误-->

        <!--明确引用org.apache.http.legacy库，避免QQ官方open sdk在Android 9上报错 -->
        <uses-library android:name="org.apache.http.legacy" android:required="false"/>
        <!--明确引用org.apache.http.legacy库，避免QQ官方open sdk在Android 9上报错 -->




        <!-- 以下为基本配置信息，需要自行添加至您的AndroidManifest文件中 start-->
        <service
            android:name="com.taobao.accs.ChannelService"
            android:exported="true"
            android:process=":channel">
            <intent-filter>
                <action android:name="com.taobao.accs.intent.action.SERVICE" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.taobao.accs.intent.action.ELECTION" />
            </intent-filter>
        </service>

        <service
            android:name="com.taobao.accs.data.MsgDistributeService"
            android:exported="true">
            <intent-filter>
                <action android:name="com.taobao.accs.intent.action.RECEIVE" />
            </intent-filter>
        </service>

        <receiver
            android:name="com.taobao.accs.EventReceiver"
            android:process=":channel">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.PACKAGE_REMOVED" />
                <data android:scheme="package" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.USER_PRESENT" />
            </intent-filter>
        </receiver>

        <receiver
            android:name="com.taobao.accs.ServiceReceiver"
            android:process=":channel">
            <intent-filter>
                <action android:name="com.taobao.accs.intent.action.COMMAND" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.taobao.accs.intent.action.START_FROM_AGOO" />
            </intent-filter>
        </receiver>

        <service
            android:name="com.taobao.accs.internal.AccsJobService"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:process=":channel"/>

        <service
            android:name="com.taobao.accs.ChannelService$KernelService"
            android:process=":channel" />

        <service
            android:name="org.android.agoo.accs.AgooService"
            android:exported="true">
            <intent-filter>
                <action android:name="com.taobao.accs.intent.action.RECEIVE" />
            </intent-filter>
        </service>

        <service
            android:name="com.umeng.message.UmengIntentService"
            android:exported="true"
            android:process=":channel">
            <intent-filter>
                <action android:name="org.agoo.android.intent.action.RECEIVE" />
            </intent-filter>
        </service>

        <service
            android:name="com.umeng.message.XiaomiIntentService"
            android:exported="true"
            android:process=":channel">
            <intent-filter>
                <action android:name="org.agoo.android.intent.action.RECEIVE" />
            </intent-filter>
        </service>

        <receiver
            android:name="com.taobao.agoo.AgooCommondReceiver"
            android:exported="true"
            android:process=":channel">
            <intent-filter>
                <action android:name="${applicationId}.intent.action.COMMAND" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.PACKAGE_REMOVED" />
                <data android:scheme="package" />
            </intent-filter>
        </receiver>

        <service
            android:name="com.umeng.message.UmengMessageIntentReceiverService"
            android:exported="true"
            android:process=":channel">
            <intent-filter>
                <action android:name="org.android.agoo.client.MessageReceiverService" />
            </intent-filter>
        </service>

        <receiver
            android:name="com.umeng.message.NotificationProxyBroadcastReceiver"
            android:exported="false" />

        <service
            android:name="com.umeng.message.UmengMessageCallbackHandlerService"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:exported="false">
            <intent-filter>
                <action android:name="com.umeng.messge.registercallback.action" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.umeng.message.enablecallback.action" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.umeng.message.disablecallback.action" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.umeng.message.message.handler.action" />
            </intent-filter>
            <intent-filter>
                <action android:name="com.umeng.message.message.sendmessage.action" />
            </intent-filter>
        </service>

        <!--魅族push应用定义消息receiver声明 -->
        <receiver android:name="com.wsl.upush.MeizuTestReceiver">
            <intent-filter>
                <!-- 接收push消息 -->
                <action android:name="com.meizu.flyme.push.intent.MESSAGE" />
                <!-- 接收register消息 -->
                <action android:name="com.meizu.flyme.push.intent.REGISTER.FEEDBACK" />
                <!-- 接收unregister消息-->
                <action android:name="com.meizu.flyme.push.intent.UNREGISTER.FEEDBACK" />
                <!-- 兼容低版本Flyme3推送服务配置 -->
                <action android:name="com.meizu.c2dm.intent.REGISTRATION" />
                <action android:name="com.meizu.c2dm.intent.RECEIVE" />
                <category android:name="${applicationId}"></category>
            </intent-filter>
        </receiver>

        <activity
            android:name="com.wsl.upush.UPushOffLineNotificationActivity"
            android:launchMode="singleTask"
            android:exported="true"
            android:theme="@android:style/Theme.NoTitleBar.Fullscreen"
            >
            <intent-filter>
                <category android:name="${applicationId}" />
            </intent-filter>
        </activity>

        <service
            android:name="com.umeng.message.UmengDownloadResourceService"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:exported="false" />

        <provider
            android:name="com.umeng.message.provider.MessageProvider"
            android:authorities="${applicationId}.umeng.message"
            android:exported="false">
            <grant-uri-permission android:pathPattern=".*" />
        </provider>
        <!-- 以下为基本配置信息，需要自行添加至您的AndroidManifest文件中 end-->

        <meta-data
            android:name="UMENG_APPKEY"
            android:value="${UMENG_APPKEY}" />
        <!-- Channel ID用来标识App的推广渠道，作为推送消息时给用户分组的一个维度。-->
        <meta-data
            android:name="UMENG_MESSAGE_SECRET"
            android:value="${UMENG_MESSAGE_SECRET}">
        </meta-data>
        <meta-data
            android:name="UMENG_CHANNEL"
            android:value="${UMENG_CHANNEL}">
        </meta-data>

        <!--        小米通道-->
        <meta-data
            android:name="XIAOMI_APPID"
            android:value="${XIAOMI_APPID}" >
        </meta-data>
        <meta-data
            android:name="XIAOMI_APPKEY"
            android:value="${XIAOMI_APPKEY}">
        </meta-data>


        <!-- HUAWEI厂商通道 start-->

        <meta-data
            android:name="com.huawei.hms.client.appid"
            android:value="appid=${HUAWEI_APPID}" />

        <!-- HUAWEI厂商通道 end-->
        <!--         魅族-->


        <meta-data
            android:name="MEIZU_APPID"
            android:value="${MEIZU_APPID}" >
        </meta-data>
        <meta-data
            android:name="MEIZU_APPKEY"
            android:value="${MEIZU_APPKEY}">
        </meta-data>

        <meta-data
            android:name="OPPO_APPKEY"
            android:value="${OPPO_APPKEY}" >
        </meta-data>
        <meta-data
            android:name="OPPO_APPSECRET"
            android:value="${OPPO_APPSECRET}">
        </meta-data>

        <!-- vivo start-->
        <meta-data
            android:name="com.vivo.push.api_key"
            android:value="${VIVO_KEY}" />
        <meta-data
            android:name="com.vivo.push.app_id"
            android:value="${VIVO_APPID}" />
        <!-- VIVO end-->

    </application>
</manifest>
